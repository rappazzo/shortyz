apply plugin: 'com.android.application'

android {
    compileSdkVersion 21
    buildToolsVersion "22.0.1"
    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 21
        testInstrumentationRunner "android.test.InstrumentationTestRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile 'com.android.support:appcompat-v7:22.1.1'
    compile 'com.android.support:recyclerview-v7:22.2.0'
    compile 'com.google.android.gms:play-services:4.0.30'
    compile project(":puzlib")
    compile 'com.nineoldandroids:library:2.4.0'
    compile 'com.jenzz:materialpreference:1.3'
    compile 'com.android.support:design:22.2.0'
    compile 'com.google.api-client:google-api-client:1.20.0'
    compile 'com.google.api-client:google-api-client-android:1.20.0'
    compile 'com.google.api-client:google-api-client-gson:1.20.0'
    compile 'com.google.apis:google-api-services-gmail:v1-rev29-1.20.0'
    androidTestCompile 'com.jayway.android.robotium:robotium-solo:4.3.1'

}

task prepareChrome << {
    def slurp = new XmlSlurper().parse(file("src/main/AndroidManifest.xml"))
    def versionCode = slurp.'@android:versionCode'.text()
    def versionName = slurp.'@android:versionName'.text()
    copy {
        from("src/main/chrome") {
            include "**/*.json"
            include "**/*.html"
            filter {
                it.replaceAll('@@versionCode@@', versionCode)
                  .replaceAll('@@versionName@@', versionName)
            }
        }
        into "build/chrome"
    }
    copy {
        from("src/main/chrome") {
            exclude "**/*.json"
            exclude "**/*.html"
        }
        into "build/chrome"
    }
}

task assembleChrome << {
    copy {
        from "build/outputs/apk/app-release.apk"
        into "build/chrome/vendor/chromium/crx"
    }
}
tasks.assembleChrome.dependsOn prepareChrome
tasks.assembleChrome.dependsOn assembleRelease

task packageChrome(type:Zip){
    from "build/chrome"
    archiveName "shortyz-chrome.zip"
}
tasks.packageChrome.dependsOn assembleChrome

tasks.build.dependsOn packageChrome


